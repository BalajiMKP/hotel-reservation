import java.util.*;
import java.text.*;

public class hotelreservation {
    public static void main(String[] args) throws ParseException {
        Scanner sc = new Scanner(System.in);
        ArrayList<Integer> arr1 = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5));
        ArrayList<Integer> arr2 = new ArrayList<>(Arrays.asList(6, 7, 8, 9, 10));
        ArrayList<Integer> arr3 = new ArrayList<>(Arrays.asList(11, 12, 13, 14, 15));
        ArrayList<Integer> arr4 = new ArrayList<>(Arrays.asList(16, 17, 18, 19, 20));
        ArrayList<Integer> arr5 = new ArrayList<>();
        ArrayList<Integer> bond = new ArrayList<>();
        String selected = "";
        int cost = 0;
        String date1 = "";
        String date2 = "";
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");

        while (true) {
            System.out.println("ROOM RESERVARTION OF BM HOTEL-AC/NON_AC");
            System.out.println("Cost of single room(per day):" + 1000);
            System.out.println("Cost of double room(per day):" + 1750);
            System.out.println("Cost of deluxe room(per day):" + 3000);
            System.out.println("Cost of family room(per day):" + 4000);
            System.out.println("Enter your name:");
            String name = sc.nextLine();
            System.out.println("Enter your mail id:");
            String mail = sc.nextLine();
            System.out.println("Enter your number:");
            long number = sc.nextLong();
            sc.nextLine();
            System.out.println("A:Single room||B:Double room||C:Deluxe room||D:Family room");
            System.out.println("Enter the room category:");
            String room = sc.nextLine();
            switch (room.toUpperCase()) {
                case "A":
                    selected = "Single_room";
                    cost = 1000;
                    bond = arr1;
                    break;
                case "B":
                    selected = "Double_room";
                    cost = 1750;
                    bond = arr2;
                    break;
                case "C":
                    selected = "Deluxe_room";
                    cost = 3000;
                    bond = arr3;
                    break;
                case "D":
                    selected = "Family_room";
                    cost = 4000;
                    bond = arr4;
                    break;
                default:
                    System.out.println("Invlid category.there is only four catagories of rooms");
            }
            System.out.println("Available rooms in " + selected + ":" + bond);
            System.out.println("Enter no of rooms needed:");
            int quant = sc.nextInt();
            sc.nextLine();
            System.out.println("Enter the needed room numbers from available rooms(use space between room numbers):");
            String need = sc.nextLine();
            String[] parts = need.split(" ");
            for (String part : parts) {
                arr5.add(Integer.parseInt(part));
            }
            for (int num : arr5) {
                if (bond.contains(num)) {
                    bond.remove(Integer.valueOf(num));
                }
            }
            System.out.println("Enter no of days needed:");
            int days = sc.nextInt();
            sc.nextLine();
            int totcost = (quant * days * cost);
            System.out.println("Enter The Starting Date (dd-MM-yyyy): ");
            String input = sc.nextLine();
            Date date = sdf.parse(input);
            String datestr = date.toString();
            String dwt = datestr.substring(0, 10) + datestr.substring(datestr.length() - 5);
            System.out.println("-------------------------Booking receipt-------------------------");
            System.out.println("Name:" + name);
            System.out.println("Contact:" + number);
            System.out.println("Mail:" + mail);
            System.out.println("Room Selected:" + selected);
            System.out.println("Quantity:" + quant);
            System.out.println("Your booked rooms:" + need);
            System.out.println("not" + arr1);
            System.out.println("not" + arr2);
            System.out.println("not" + arr3);
            System.out.println("not" + arr4);
            System.out.println("not" + arr5);
            System.out.println("not" + bond);
            System.out.println("Days:" + days);
            System.out.println("Booking Startes From:" + dwt);
            System.out.println("Total Amount:" + totcost);
            System.out.println("-------------------------Booking completed------------------------");
            restoreRoomsIfExpired(arr5, bond, input, days, arr1, arr2, arr3, arr4, selected);
            arr5.clear(); 
        }
    }
    public static void restoreRoomsIfExpired(ArrayList<Integer> arr5, ArrayList<Integer> bond, String input, int days,
                                             ArrayList<Integer> arr1, ArrayList<Integer> arr2, ArrayList<Integer> arr3,
                                             ArrayList<Integer> arr4, String selected) throws ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        Date startDate = sdf.parse(input);
        Calendar cal = Calendar.getInstance();
        cal.setTime(startDate);
        cal.add(Calendar.DAY_OF_MONTH, days);
        Date endDate = cal.getTime();

        Date today = new Date();
        if (!today.before(endDate)) {
            switch (selected) {
                case "Single_room":
                    arr1.addAll(arr5);
                    Collections.sort(arr1);
                    break;
                case "Double_room":
                    arr2.addAll(arr5);
                    Collections.sort(arr2);
                    break;
                case "Deluxe_room":
                    arr3.addAll(arr5);
                    Collections.sort(arr3);
                    break;
                case "Family_room":
                    arr4.addAll(arr5);
                    Collections.sort(arr4);
                    break;
            }
            System.out.println("Rooms " + arr5 + " stay completed. Returned to category: " + selected);
        }
    }
}
